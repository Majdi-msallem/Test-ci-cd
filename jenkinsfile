properties([pipelineTriggers([githubPush()])])
pipeline{
    agent any 
          tools { 
        maven "M2_HOME" 
        }
        environment {
    registry = "majdimsallem/candidate"
        registryCredential='dockerhub_id'
        dockerImage=''
    }
        stages {
            stage('Checkout GIT ') {
                steps {
                    echo 'Pulling ...';
                    git branch : 'master',
                    url : 'https://github.com/Majdi-msallem/Test-ci-cd.git'
                }
            }
     
stage('git clone') {
            steps {
               git branch: 'master', 
               url: 'https://github.com/Majdi-msallem/Test-ci-cd.git'
        
            }
        }
        
       stage('MVN CLEAN'){
            steps {
                sh 'mvn clean'
            }
        }
       
             stage('MVN INSTALL') {
            steps {
                sh 'mvn install'

            }
        }
        
         stage('MVN Nexus'){
            steps {
                sh 'mvn deploy -e -X -DskipTests=true'
            }
        }
        
        
          /*   
          stage('Building our image') { 
            steps { 
                script { 
                    dockerImage = docker.build registry + ":$BUILD_NUMBER" 
                }
            } 
        }
       stage('Deploy our image') { 
            steps { 
                script { 
                    docker.withRegistry( '', registryCredential ) { 
                        dockerImage.push() 
                    }
                } 
            }
        } 
        stage('SonarQube analysis') {
//    def scannerHome = tool 'SonarScanner 4.0';
        steps{
        withSonarQubeEnv('sonarqube-8.9.7') { 
        // If you have configured more than one global server connection, you can specify its name
//      sh "${scannerHome}/bin/sonar-scanner"
        sh "mvn sonar:sonar"
    }
        }
        }
       
        stage('Cleaning up') { 
            steps { 
                sh "docker rmi $registry:$BUILD_NUMBER" 
            }
        } */
        
       
        }
}
